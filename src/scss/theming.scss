@import '~@angular/material/theming';
@include mat-core();

@include set-custom-theme('light-theme', map-get($colors, light-theme), false, $main-light-hue, $second-light-hue, $tertiary-light-hue);
@include set-custom-theme('dark-theme', map-get($colors, dark-theme), true, $main-dark-hue, $second-dark-hue, $tertiary-dark-hue);

// Light theme
.light-theme {
  .nav-list-item {
    &.active {
      background-color: rgba($main-color, 7%);
      color: lighten($main-color, 10%);

      mat-icon,
      span {
        color: lighten($main-color, 10%);
      }
    }

    &:hover,
    &:focus {
      background-color: rgba(saturate($main-color, 10%), 10%) !important;
    }
  }

  .border-theme {
    border-color: $black-12-opacity;

    &-button:hover {
      border-color: #555;
      border-width: 2px;
    }
  }

  .icon-button,
  .badge {
    background-color: darken(map-get(map-get($colors, light-theme), background), 2%);
  }

  .badge {
    &.mat-button {
      color: #888;
      border-color: darken(map-get(map-get($colors, light-theme), background), 2%);
    }

    &.badge-fill {
      color: map-get(map-get($colors, light-theme), warn);
      background-color: white;
    }
  }

  .mat-tab-group .mat-tab-header {
    background-color: white;
  }

  ::-webkit-scrollbar-thumb {
    border-color: darken(map-get(map-get($colors, light-theme), background), 2%);
  }

  .angular-editor .ck {

    .ck-toolbar {
      // background: white;
      background: map-get(map-get($colors, other), input-color);
      border-color: $black-12-opacity;
      border-top-color: transparent;
      border-left-color: transparent;
      border-right-color: transparent;
    }

    .ck-editor__main {
      & > .ck-editor__editable {
        &:not(.ck-focused) {
          border-color: $black-12-opacity;
        }
      }
    }
  }

}

// Dark theme
.dark-theme {
  .nav-list-item {
    &.active {
      background-color: lighten(map-get(map-get($colors, dark-theme), background), 3%);
      color: white;

      mat-icon,
      span {
        color: white;
      }
    }

    &:hover,
    &:active,
    &:focus {
      background-color: map-get(map-get($colors, dark-theme), background) !important;
    }
  }

  .mat-dialog-container {
    @include mat-elevation(5);
  }

  .border-theme {
    border-color: rgba(map-get(map-get($colors, dark-theme), foreground), 0.3);

    &-button:hover {
      border-color: map-get(map-get($colors, dark-theme), foreground);
      border-width: 2px;
    }
  }

  .icon-button,
  .badge,
  .mat-button.badge {
    background-color: #666;
  }

  .badge {
    color: #ccc;
    border-color: #666;

    &.badge-fill {
      background-color: lighten(map-get(map-get($colors, dark-theme), background), 6%);
    }
  }

  // 424242
  .mat-tab-group .mat-tab-header {
    background-color: lighten(map-get(map-get($colors, dark-theme), background), 6%);
  }

  ::-webkit-scrollbar-thumb {
    border-color: lighten(map-get(map-get($colors, dark-theme), background), 6%);
  }

  .angular-editor .ck {

    .ck-reset_all,
    .ck-reset_all * {
      color: #ccc;
    }

    &.ck-toolbar__separator {
      background-color: rgba(map-get(map-get($colors, dark-theme), foreground), 0.3) !important;
    }

    .ck-button:not(.ck-disabled):hover,
    a.ck.ck-button:not(.ck-disabled):hover,
    .ck-button:not(.ck-disabled):active,
    a.ck.ck-button:not(.ck-disabled):active,
    .ck-button.ck-on,
    a.ck.ck-button.ck-on {
      background-color: map-get(map-get($colors, dark-theme), background);
    }

    .ck-toolbar,
    .ck-dropdown__panel,
    .ck-list {
      background-color: lighten(map-get(map-get($colors, dark-theme), background), 3%);
      border-color: rgba(map-get(map-get($colors, dark-theme), foreground), 0.3);
      color: #ccc;
      border-radius: 5px;
    }

    .ck-editor__main {
      & > .ck-editor__editable {
        &:not(.ck-focused) {
          border-color: rgba(map-get(map-get($colors, dark-theme), foreground), 0.3);
        }
      }
    }
  }
}
