// Functions

// Get color from a map
@function get-color($scheme, $tone) {
  @return map-get(map-get($colors, $scheme), $tone);
}

// Set Custom Palettes
@function set-custom-palettes($theme-colors) {

  $palettes-map: ();

  @each $key,
  $value in $theme-colors {
    $map: ();
    $map: map-merge($map, ($key: create_colour_map($value)));
    $palettes-map: map-merge($palettes-map, $map);
  }

  @return $palettes-map;
}

// Generate a material palette 
@function create_colour_map($color, $saturate: 25%, $hue: 10%) {

  $map: (
    50 : get-lightness-color($color, 10),
    100 : get-lightness-color($color, 9),
    200 : get-lightness-color($color, 8),
    300 : get-lightness-color($color, 7),
    400 : get-lightness-color($color, 6),
    500 : get-lightness-color($color, 5),
    600 : get-lightness-color($color, 4),
    700 : get-lightness-color($color, 3),
    800 : get-lightness-color($color, 2),
    900 : get-lightness-color($color, 1),
    A100 : adjust-hue(saturate(get-lightness-color($color, 9), $saturate), $hue),
    A200 : adjust-hue(saturate(get-lightness-color($color, 8), $saturate), $hue),
    A400 : adjust-hue(saturate(get-lightness-color($color, 6), $saturate), $hue),
    A700 : adjust-hue(saturate(get-lightness-color($color, 3), $saturate), $hue),
    contrast: (
      50 : get-contrast-color(get-lightness-color($color, 10)),
      100 : get-contrast-color(get-lightness-color($color, 9)),
      200 : get-contrast-color(get-lightness-color($color, 8)),
      300 : get-contrast-color(get-lightness-color($color, 7)),
      400 : get-contrast-color(get-lightness-color($color, 6)),
      500 : get-contrast-color(get-lightness-color($color, 5)),
      600 : get-contrast-color(get-lightness-color($color, 4)),
      700 : get-contrast-color(get-lightness-color($color, 3)),
      800 : get-contrast-color(get-lightness-color($color, 2)),
      900 : get-contrast-color(get-lightness-color($color, 1)),
      A100 : get-contrast-color(adjust-hue(saturate(get-lightness-color($color, 9), $saturate), $hue)),
      A200 : get-contrast-color(adjust-hue(saturate(get-lightness-color($color, 8), $saturate), $hue)),
      A400 : get-contrast-color(adjust-hue(saturate(get-lightness-color($color, 6), $saturate), $hue)),
      A700 : get-contrast-color(adjust-hue(saturate(get-lightness-color($color, 3), $saturate), $hue)))
    );

  @return $map;
}

@function get-lightness-color($color, $brightnessLevel) {
  $colorLightness: floor(lightness($color) / 10);

  @if $colorLightness < $brightnessLevel {
    @return lighten($color, 8% * ($brightnessLevel - $colorLightness));
  }

  @if $colorLightness == $brightnessLevel {
    @return $color;
  }

  @if $colorLightness > $brightnessLevel {
    @return darken($color, 8% * ($colorLightness - $brightnessLevel));
  }
}

// Contrast colors
@function get-contrast-color($color) {
  $lightness: lightness($color);
  $contrast: $black-87-opacity;

  @if ($lightness < 80) {
    $contrast: black;
  }

  @if ($lightness < 60) {
    $contrast: white;
  }

  @if ($lightness < 20) {
    $contrast: $white-87-opacity;
  }

  @return $contrast;
}

// Set background theme
@function set-background-theme($my-theme, $background-color) {
  $my-background: map-get($my-theme, background);
  $my-background: map_merge($my-background, (background: $background-color));
  $my-theme: map_merge($my-theme, (background: $my-background));
  @return $my-theme;
}

// Set foreground theme
@function set-foreground-theme($my-theme, $foreground-color) {
  $my-foreground: (
    base                      : $foreground-color,
    divider                   : rgba($foreground-color, 0.12),
    dividers                  : rgba($foreground-color, 0.12),
    disabled                  : rgba($foreground-color, 0.5),
    disabled-button           : rgba($foreground-color, 0.3),
    disabled-text             : rgba($foreground-color, 0.5),
    elevation                 : $foreground-color,
    hint-text                 : rgba($foreground-color, 0.3),
    secondary-text            : rgba($foreground-color, 0.5),
    icon                      : $foreground-color,
    icons                     : $foreground-color,
    text                      : $foreground-color,
    slider-min                : $foreground-color,
    slider-off                : rgba($foreground-color, 0.3),
    slider-off-active         : rgba($foreground-color, 0.3)
  );

  $my-theme: map_merge($my-theme, (foreground: $my-foreground));
  @return $my-theme;
}
